import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
)
import json

# üìé –ö–Ω–æ–ø–∫–∞
markup = ReplyKeyboardMarkup([
    ["üìÑ –ú–æ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"]
], resize_keyboard=True)

# üîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google –¢–∞–±–ª–∏—Ü–µ
def get_user_info_by_id(user_id, sheet_name="TelegramSubscribers"):
    scope = [
        "https://spreadsheets.google.com/feeds",
        "https://www.googleapis.com/auth/drive"
    ]
    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    client = gspread.authorize(creds)

    sheet = client.open(sheet_name).sheet1
    data = sheet.get_all_records()

    for row in data:
        if str(row.get("user_id")) == str(user_id):
            return row  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å—é —Å—Ç—Ä–æ–∫—É

    return None

# üì© –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:",
        reply_markup=markup
    )

# üßæ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìÑ –ú–æ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
async def show_my_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    row = get_user_info_by_id(user.id)

    if not row:
        await update.message.reply_text("üòï –¢–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ.")
        return

    msg = "üìÑ <b>–¢–≤–æ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n"
    for key, value in row.items():
        msg += f"<b>{key}</b>: {value}\n"

    await update.message.reply_html(msg)

# üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "üìÑ –ú–æ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        await show_my_info(update, context)
    else:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üëá", reply_markup=markup)

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    BOT_TOKEN = "8033606007:AAHBLngkWy8UjcU5stSRE-anti9Sf2gad3A"

    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å!")
    app.run_polling()
